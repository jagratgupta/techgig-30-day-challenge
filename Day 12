/* Read input from STDIN. Print your output to STDOUT*/
/*
Patch Up Two Matrices (100 Marks)
For this challenge, you need to take 2 matrices as an input from the stdin , add them and print the resultant matrix to the stdout.
*/
import java.io.*;
import java.util.*;
public class CandidateCode {
   public static void main(String args[] ) throws Exception {

	//Write code here
   int m, n, c, d,a,b;
   int count=0;
   int count1;
      Scanner in = new Scanner(System.in);
 
      //System.out.println("Input number of rows of matrix");
      m = in.nextInt();
    //  System.out.println("Input number of columns of matrix");
      n  = in.nextInt();
 
      int array1[][] = new int[m][n];

 
    //  System.out.println("Input elements of first matrix");
 
      for (  c = 0 ; c < m ; c++ )
         for ( d = 0 ; d < n ; d++ )
            array1[c][d] = in.nextInt();
 
      //System.out.println("Input the elements of second matrix");
 
       a = in.nextInt();
    //  System.out.println("Input number of columns of matrix");
      b  = in.nextInt();
      int array2[][] = new int[a][b];
   //   int sum[][] = new int[m][n];
      for ( c = 0 ; c < a ; c++ )
         for ( d = 0 ; d < b ; d++ )
            array2[c][d] = in.nextInt();
 
 int maxrow=Math.max(a,m);
int maxcol=Math.max(b,n);

  int sum[][] = new int[maxrow][maxcol];

      for ( c = 0 ; c < maxrow ; c++ )
         for ( d = 0 ; d < maxcol ; d++ )
             sum[c][d] = array1[c][d] + array2[c][d]; 
 
   //   System.out.println("Sum of the matrices:-");
 
 //count is to prevent extra print in new line
//count1 is to prevent extra space after last character
// maxrow and maxcol to determine bigger row and col so that it loops till given point
      for ( c = 0 ; c < maxrow ; c++ )
      {            count1=0;

         for ( d = 0 ; d < maxcol ; d++ ){
            count1++;
            if(count1==maxcol)
            System.out.print(sum[c][d]+"");
            else
            System.out.print(sum[c][d]+" ");
         }
         count++;
         if(count==maxrow)
            break;
         System.out.println();
      }

   }
}
